services:
    nginx:
        image: "nginx:stable-alpine"
        ports:
            - "${NGINX_PORT:-8000}:80"
        restart: always
        volumes:
            - ./docker/nginx/${NGINX_CONFIG:-nginx.conf}:/etc/nginx/conf.d/default.conf:ro
            - ./:/var/www/application
        depends_on:
            - php
        networks:
            - pp-network

    php:
        build:
            context: docker/php
            dockerfile: Dockerfile
        restart: always
        environment:
            - APP_ENV=${APP_ENV:-local}
        extra_hosts:
            - "host.docker.internal:host-gateway"
        volumes:
            - ./:/var/www/application
            - ./docker/php/conf/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
        networks:
            - pp-network
        depends_on:
            - postgres

    composer:
        build:
            context: docker/php
            dockerfile: Dockerfile
        entrypoint: [ "composer" ]
        volumes:
            - ./:/var/www/application
            - ./docker/php/conf/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini

    artisan:
        build:
            context: docker/php
            dockerfile: Dockerfile
        volumes:
            - ./:/var/www/application
            - ./docker/php/conf/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
        entrypoint: [ "php", "/var/www/application/artisan" ]
        networks:
            - pp-network

    postgres:
        image: postgres:16
        restart: always
        environment:
            POSTGRES_DB: ${DB_DATABASE:-app_db}
            POSTGRES_USER: ${DB_USERNAME:-app_user}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
        volumes:
            - ./database/postgres_data:/var/lib/postgresql/data
        networks:
            - pp-network
        ports:
            - "5432:5432"

networks:
    pp-network:
        driver: bridge
